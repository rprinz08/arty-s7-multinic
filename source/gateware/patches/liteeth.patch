diff --git a/liteeth/phy/rmii.py b/liteeth/phy/rmii.py
index 679b8ce..a87242d 100644
--- a/liteeth/phy/rmii.py
+++ b/liteeth/phy/rmii.py
@@ -93,7 +93,8 @@ class LiteEthPHYRMIIRX(Module):
 
 
 class LiteEthPHYRMIICRG(Module, AutoCSR):
-    def __init__(self, clock_pads, pads, with_hw_init_reset):
+    def __init__(self, clock_pads, pads, with_hw_init_reset,
+                 no_clk_out=False, clock_cd="eth"):
         self._reset = CSRStorage()
 
         # # #
@@ -102,10 +103,13 @@ class LiteEthPHYRMIICRG(Module, AutoCSR):
         self.clock_domains.cd_eth_rx = ClockDomain()
         self.clock_domains.cd_eth_tx = ClockDomain()
         self.comb += [
-            self.cd_eth_rx.clk.eq(ClockSignal("eth")),
-            self.cd_eth_tx.clk.eq(ClockSignal("eth"))
+            self.cd_eth_rx.clk.eq(ClockSignal(clock_cd)),
+            self.cd_eth_tx.clk.eq(ClockSignal(clock_cd))
         ]
-        self.specials += DDROutput(0, 1, clock_pads.ref_clk, ClockSignal("eth_tx"))
+
+        if not no_clk_out:
+            self.specials += DDROutput(0, 1, clock_pads.ref_clk,
+                                       ClockSignal(clock_cd + "_tx"))
 
         # Reset
         self.reset = reset = Signal()
@@ -126,8 +130,11 @@ class LiteEthPHYRMII(Module, AutoCSR):
     dw          = 8
     tx_clk_freq = 50e6
     rx_clk_freq = 50e6
-    def __init__(self, clock_pads, pads, with_hw_init_reset=True):
-        self.submodules.crg = LiteEthPHYRMIICRG(clock_pads, pads, with_hw_init_reset)
+    def __init__(self, clock_pads, pads, with_hw_init_reset=True,
+                 no_clk_out=False, clock_cd="eth"):
+        self.submodules.crg = LiteEthPHYRMIICRG(clock_pads, pads,
+                                                with_hw_init_reset,
+                                                no_clk_out, clock_cd)
         self.submodules.tx = ClockDomainsRenamer("eth_tx")(LiteEthPHYRMIITX(pads))
         self.submodules.rx = ClockDomainsRenamer("eth_rx")(LiteEthPHYRMIIRX(pads))
         self.sink, self.source = self.tx.sink, self.rx.source
